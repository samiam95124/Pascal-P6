#!/bin/bash
################################################################################
#
# Configure scipt for Pascal-p6
#
# Sets up the complete Pascal-p6 project.
#
################################################################################

#
# Check command exists
#
# Uses the bash "command" built in.
#
function checkexists {

    command -v $1 >/dev/null
    rc=$?
    if [[ $rc != 0 ]] ; then

        echo "*** No $1 was found"

    fi

}

#
# Set default variables
#
compiler="pascaline"
bits="64"
host="linux"

#
# Determine if needed programs exist. The only fatal one is grep, because we
# need that to run this script. The rest will impact the running of various
# test and build scripts.
#
checkexists grep
if [[ $rc != 0 ]] ; then

    exit 1

fi

checkexists diff
checkexists sed
checkexists rm
checkexists cp
checkexists mv

checkexists flip > /dev/null

if [[ $rc != 0 ]] ; then

    echo -n "flip does not exist"
    echo $PATH | grep -q "$PWD/bin" || echo -n ", has PATH been set up?"
    echo
    echo "attempting to make it"
    gcc -o ./bin/flip ./source/flip.c
    checkexists flip > /dev/null
    flip=$rc
    if [[ $rc != 0 ]] ; then

        echo "*** Unable to make flip"

    fi

fi
checkexists ls
checkexists zip

#
# Check user arguments
#
for var in "$@"
do

    if [ $var = "--help" ]
    then

        echo "Configure host for Pascal-p6"
        echo
        echo "--32:        Select 32 bit target"
        echo "--64:        Select 64 bit target"
        echo
        exit 0

    elif [ $var = "--32" ]
    then

        bits="32"

    elif [ $var = "--64" ]
    then

        bits="64"

    fi

done

#
# Set up for chosen Pascal compiler combination
#
echo "Set up for $compiler"
cp hosts/$compiler/bit$bits/p6.bat bin/p6.bat
cp hosts/$compiler/compile.bat     bin/compile.bat
cp hosts/$compiler/run.bat         bin/run.bat

cp hosts/$compiler/bit$bits/p6     bin/p6
cp hosts/$compiler/compile         bin/compile
cp hosts/$compiler/run             bin/run
cp hosts/$compiler/testp2          bin/testp2

cp hosts/$compiler/bit$bits/Makefile    .

cp hosts/$compiler/bit$bits/standard_tests/iso7185pat.cmp standard_tests
cp hosts/$compiler/bit$bits/standard_tests/iso7185patc.cmp standard_tests
cp hosts/$compiler/bit$bits/standard_tests/iso7185pats.cmp standard_tests
   
cp hosts/$compiler/bit$bits/p4/standardp.cmp p4
cp hosts/$compiler/bit$bits/p4/standardpc.cmp p4

cp hosts/$compiler/linux_X86/* bin

echo "Bit length $bits"

echo "Configure completed!"
