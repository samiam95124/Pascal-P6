#!/bin/bash
#
# Run a Pascal file in batch mode using GPC Pascal
#
# Runs a Pascal intermediate in batch mode.
#
# Execution:
#
# run <file> [--pmach|--cmach|--pint] [<inpfile>] <file>
#
# <file> is the filename without extention.
#
# The files are:
#
# <file>.p6  - The intermediate file.
# <file>.dat - The prd file to program.
# <file>.out - The prr file produced.
# <file>.inp - The input file to the program.
# <file>.lst - The output file from the program.
# <file>.p6o - The object deck for mach, if selected.
#
# The flags are one of:
#
# --pmach Generate mach code and run the result through pmach.
# --cmach Generate mach code and run the result through cmach.
# --pint  Generate mach code and run the result through pint (default).
#

pint=0
pmach=0
cmach=0
package=0
pgen=1
progfile=""
options=""
nolist="0"

for param in "$@" 
do

    if [ "$param" = "--pint" ]; then
	
        pint=1
        pmach=0
        cmach=0
        package=0
        pgen=0

    elif [ "$param" = "--pmach" ]; then
	
        pmach=1
        pint=0
        cmach=0
        package=0
        pgen=0
        
    elif [ "$param" = "--cmach" ]; then
    
        cmach=1
        pint=0
        pmach=0
        package=0
        pgen=0

    elif [ "$param" = "--package" ]; then
    
        package=1
        pint=0
        pmach=0
        cmach=0
        pgen=0

    elif [ "$param" = "--pgen" ]; then
    
        pgen=1
        pint=0
        pmach=0
        cmach=0
        package=0

    elif [ "$param" = "--nolist" ]; then
    
        nolist=1
      
    elif [ "$param" = "--help" ]; then

		echo ""  
		echo "Run a Pascal file in batch mode using GPC Pascal"
		echo ""
		echo "Runs a Pascal intermediate in batch mode."
		echo ""
		echo "Execution:"
		echo ""
		echo "run <file> [--pmach|--cmach|--pint] <file>"
		echo ""
		echo "<file> is the filename without extention."
		echo ""
		echo "The files are:"
		echo ""
		echo "<file>.p6  - The intermediate file"
		echo "<file>.out - The prr file produced"
		echo "<file>.inp - The input file to the program"
		echo "<file>.lst - The output file from the program"
		echo "<file>.p6o - The object deck for mach, if selected"
		echo ""
		echo "The flags are one of:"
		echo ""
		echo "--pmach  Generate mach code and run the result through pmach."
		echo "--cmach  Generate mach code and run the result through cmach."
		echo "--pint   Generate mach code and run the result through pint."
        echo "--pgen   Run binary code {default)."
		echo "--nolist Do not output listing."

		echo ""
		goto stop
		
    elif [ "${param:0:1}" = "-" ]; then

        # concatentate unrecognized options in option string
        options="$options $param"

	else
	
		progfile="$param"
		
    fi
    
done

if [ -z "$progfile" ]; then

	echo "*** Error: No run file specified"
	exit 1
	
fi

if [ ! -f "$progfile.p6" ]; then
	
	echo "$progfile.p6 does not exist"
	exit 1
			
fi
if [ ! -f "$progfile.inp" ]; then
		
	echo "$progfile.inp does not exist"
	exit 1
			
fi

if [ "$pmach" = "1" ]; then

	echo Running with pmach
    echo "o e+" > temp
    cat temp $progfile.p6 > temp2
    pint temp2 $progfile.p6o > temp
    cat $progfile.p6o $progfile.dat > temp
    pmach temp $progfile.out $options < $progfile.inp &> $progfile.lst
    rm temp temp2
    
elif [ "$cmach" = "1" ]; then

	echo Running with cmach
    pint $progfile.p6 $progfile.p6o --machdeck > temp
    cmach $progfile.p6o $options $progfile.dat $progfile.out < $progfile.inp &> $progfile.lst
    rm temp temp2

elif [ "$package" = "1" ]; then

    echo Running with package
    ./$progfile $options $progfile.dat $progfile.out < $progfile.inp &> $progfile.lst

elif [ "$pgen" = "1" ]; then

    echo Running with pgen
    ./$progfile $progfile.dat $progfile.out $options < $progfile.inp &> $progfile.lst

else

	echo Running with pint
    cat $progfile.p6 $progfile.dat > temp
    # echo "Will execute: pint temp $progfile.out $options < $progfile.inp &> $progfile.lst"
    pint temp $progfile.out $options < $progfile.inp &> $progfile.lst
    rm temp
    
fi

#
# Output listing if enabled
#
if [ "$nolist" = "0" ]; then

    cat $progfile.lst

fi