!
! This first part is source level only. I put the machine level commands at the
! end because they can move around with changes to the program.
!
h
! turn on source profiling for later test
spf
l debug_test 1
l debug_test 1 100
l debug_test 1:100
l debug_test 5
l debug_test 5 100
l debug_test 5:100
lc debug_test1 1
lc debug_test1 1 100
lc debug_test1 1:100
lc debug_test 5
lc debug_test 5 100
lc debug_test 5:100
li $0
li $0 $100
li $0:100
li $4e
li $4e $100
li $4e:100
! run until end of program block
b debug_test stop1
r
! expressions/constants
p $100
p &100
p %100
p 255$
p 100&
p 100%
p not 1$
p 2+(3*4)
p (2+3)*4
p ['0'..'9','a','b']
p 'hi there bob''s'
p 'hi '''' there'
p 1
p 12.34
p 3*4
p 3.0*4.0
p 10/3
p 10.0/3.0
p 10 div 3
p 10 mod 3
p 10 and 3%
p 1+2
p 1.0+2.0
p 3-1
p 3.0-1.0
p 10 or 3%
p 10 xor 3%
p 12 = 12
p 12 = 13
p 12 <> 12
p 12 <> 13
p 12 < 13
p 12 < 12
p 12 < 10
p 42 > 10
p 42 > 42
p 42 > 50
p 32 <= 40
p 32 <= 32
p 32 <= 12
p 92 >= 10
p 92 >= 92
p 92 >= 100

p x
p c
p b
p e
p sr
p f
p rv
p a
p ar
p a[5]
p rv.rec.sr
p rv.rec.a
p rv.rec.a[5]
p ar[5].e
p ar[6].rec.a[5]
p pi$
p pi^

d 0
d 0 $100
d 0:$100
d $100
d $100 $100
d $100:$100
! print contents of i, then modify using enter, then print again
p x
e *x 12 0 0 0
p x
st i $1234
p i$
pg
! go down a level to proc1
b stop2
r
! step out of the stop
s

! print parameters
p pi
p pc
p pb
p pe
p psr
p pr
p prec
p pa

! print locals
p x
p c
p b
p e
p sr
p f
p rv
p a
p ar
p a[5]
p rv.rec.sr
p rv.rec.a
p rv.rec.a[5]
p ar[5].e
p ar[6].rec.a[5]
p ip$
p ip^

! Various dumps. Note pl 2 and pp 2 dumps only dump one level since that is all
! there is.
pl
pl 2
pp
pp 2
ds
dd
dd 1

! go down a level to proc2
b stop3
r
s

pl 2
pp 2
dd
dd 2
! step over some writes
s 2
ss 2
tp traceme
b stop4
r
s
lb
c
lb
w a
w b
b stop5
r
s
lw
cw 1
lw
cw
lw
ts
b stop6
r
s
nts
an
b stop7
r
s
lsa
s
s
hs
s
hs
tr
b stop8
r
s
ntr
! step out of proc2
s
! step out of proc1
s

! Test source profiling.
! Compare this listing with the one at program start to see if the counters have
! rolled.
l debug_test 1 100

! machine commands can be tested in source mode, we just don't get a machine
! level status print. Note li @pc can be a defacto assembly status, since it 
! shows where the execution point is.
!
! Note the test can need to be recalibrated if the source changes.
!
! Test si, sis, lia, bi, tpi
p @pc$
li @pc
si
p @pc$
li @pc
sis
p @pc$
li @pc
an
bi $2772
r
p @pc$
li @pc
lia
! Now step to for loop
s
li @pc:20
! trace at the top of the for loop, and break the line after
tpi $27de
b 222
r

! Test system variables
! This must be done at the end since it corrups the variables.
p @pc$
st @pc $1234
p @pc$

p @sp$
st @sp $1234
p @sp$

p @mp$
st @mp $1234
p @mp$

p @np$
st @np $1234
p @np$

! these variables can't be changed
p @constants
p @heapbottom

! exit complete
q
