#!/bin/bash
#
# Script to run a pcom self compile
#
# First, change elide patterns to #ove prr file statements.
# The modified file goes in pcomm.pas (pcom modified).
#
cpp -DSELF_COMPILE -DWRDSIZ64 -P -nostdinc -traditional-cpp source/pcom.pas source/pcom.mpp.pas
#
# Compile pcom to intermediate code using its binary version.
#
echo Compiling pcom to intermediate code
compile source/pcomm.mpp
cat source/pcom.mpp.err
#
# Now run that code on the interpreter and have it compile itself
# to intermediate again.
#
echo Running pcom to compile itself

cat source/pcom.mpp.p6 source/pcom.mpp.pas > tmp.p6
mv source/pcom.mpp.p6 source/pcom.mpp.p6.org
cp tmp.p5 source/pcom.mpp.p6
echo > source/pcom.mpp.inp

run source/pcom.mpp
cat source/pcom.mpp.lst
#
# Now we have the original intermediate from the binary version
# of pcom, and the intermediate generated by the interpreted
# pcom. Compare them for equality. Put the result in pcomm.dif.
#
echo -n "Comparing the intermediate code for the runs ... "
diffnole source/pcom.mpp.p6.org source/pcom.mpp.out > source/pcom.mpp.dif
#
# Show the file, so if the length is zero, it compared ok.
#
#echo Resulting diff file length should be zero for pass
if test -s source/pcom.mpp.dif
then
    echo FAILED
else
    echo PASS
fi
echo
#ls -l pcomm.dif
