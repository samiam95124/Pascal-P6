#!/bin/bash
#
# Script to test p4 compile and run
#
# Compile p4
#
echo "Compiling pcom to intermediate code"
compile $1 p4/pcom
cat p4/pcom.err
#
# Copy the test file to the input file and compile it via interpreted p4
#
cp p4/standardp.pas p4/pcom.inp
run $1 p4/pcom
cat p4/pcom.lst
#
# For neatness sake, copy out the intermediate to .p4 file
#
cp p4/pcom.out p4/standardp.p4
#
# Compile pint
#
echo Compiling pint to intermediate code
compile $1 p4/pint
#
# Add the final target program to the end of pint.
# This means that the version of pint will read and interpret
# this.
#
# Create null input file
#
echo > p4/pint.inp
#
# Now run pint(p4) on pint(p6), which runs the test program.
#
echo Running pint\(p4\) on pint\(p6\) to execute test program
cp p4/standardp.p4 p4/pint.dat
run $1 p4/pint
#
# Copy the result listing back to standardp.lst, again for neatness
#
cp p4/pint.lst p4/standardp.lst
#
# Now compare with reference
#
echo Comparing PAT result to reference
strip p4/standardp.lst tmp1
if [ "$1" = "--cmach" ] || [ "$1" = "--package" ]; then

    strip p4/standardpc.cmp tmp2
	
else

    strip p4/standardp.cmp tmp2

fi
diff -B tmp1 tmp2 > p4/standardp.dif
rm -f tmp1
rm -f tmp2
ls -l p4/standardp.dif > tmp1
grep ".dif" tmp1
rm -f tmp1
## pass if diff file is empty
if test -s p4/standardp.dif
then
    echo "*** FAIL"
    exit 1
else
    echo "PASS"
fi

rm -f p4/pcom.inp
rm -f p4/pint.inp
