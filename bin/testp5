#!/bin/bash
#
# Script to test p5 compile and run
#
# Compile p5
#
echo "Compiling pcom to intermediate code"
cpp -DSELF_COMPILE -DWRDSIZ64 -P -nostdinc -traditional-cpp p5/source/pcom.pas p5/source/pcom.mpp.pas
compile $1 p5/source/pcom.mpp
cat p5/source/pcom.mpp.err
#
# Run P5/pcom on P6
#
echo > p5/source/pcom.mpp.inp
cp standard_tests/iso7185pat.pas p5/source/pcom.mpp.dat
run $1 p5/source/pcom.mpp 
cat p5/source/pcom.mpp.lst
#
# For neatness sake, copy out the intermediate to .p5 file
#
cp p5/source/pcom.mpp.out standard_tests/iso7185pat.p5
#
# Compile pint
#
echo "Compiling pint to intermediate code"
cpp -DSELF_COMPILE -DWRDSIZ64 -P -nostdinc -traditional-cpp p5/source/pint.pas p5/source/pint.mpp.pas
compile $1 p5/source/pint.mpp
cat p5/source/pint.mpp.err
#
# Add the final target program to the end of pint.
# This means that the version of pint will read and interpret
# this.
#
# Create null input file
#
echo > p5/source/pint.mpp.inp
#
# Now run pint(p5) on pint(p6), which runs the test program.
#
echo "Running pint(p5) on pint(p6) to execute test program"
cp standard_tests/iso7185pat.p5 p5/source/pint.mpp.dat
run $1 p5/source/pint.mpp
#
# Copy the result listing back to standardp.lst, again for neatness
#
cp p5/source/pint.mpp.lst standard_tests/iso7185pat.lst
#
# Now compare with reference
#
echo "Comparing PAT result to reference"
strip standard_tests/iso7185pat.lst tmp1
if [ "$1" = "--cmach" ] || [ "$1" = "--package" ]; then

    strip standard_tests/iso7185patp5c.cmp tmp2
	
else

    strip standard_tests/iso7185patp5.cmp tmp2

fi
diff -B tmp1 tmp2 > standard_tests/iso7185pat.dif
rm -f tmp1 tmp2
ls -l standard_tests/iso7185pat.dif > tmp1
grep ".dif" tmp1
rm -f tmp1
## pass if diff file is empty
if test -s standard_tests/iso7185pat.dif
then
    echo "*** FAIL"
    exit 1
else
    echo "PASS"
fi

rm -f p5/source/pcom.inp
rm -f p5/source/pint.inp
