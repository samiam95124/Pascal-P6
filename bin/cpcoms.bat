rem @echo off
rem
rem Script to run a pcom self compile
rem
rem First, change elide patterns to remove prr file statements.
rem The modified file goes in pcomm.pas (pcom modified).
rem
call pascpp source\pcom -DWRDSIZ32 -DSELF_COMPILE
rem
rem Compile pcom to intermediate code using its binary version.
rem
echo Compiling pcom to intermediate code
call compile source\pcom.mpp
type source\pcom.mpp.err
rem
rem Now run that code on the interpreter and have it compile itself
rem to intermediate again.
rem
echo Running pcom to compile itself
cat source\pcom.mpp.p6 source\pcom.mpp.pas > tmp.p6
mv source\pcom.mpp.p6 source\pcom.mpp.p6.org
cp tmp.p6 source\pcom.mpp.p6
echo.> source\pcom.mpp.inp
call run source\pcom.mpp
type source\pcom.mpp.lst

exit /b

rem
rem Now we have the original intermediate from the binary version
rem of pcom, and the intermediate generated by the interpreted
rem pcom. Compare them for equality. Put the result in pcomm.dif.
rem
echo Comparing the intermediate code for the runs
call diffnole source\pcom.mpp.p6.org source\pcom.mpp.out > source\pcom.mpp.dif
rem
rem Show the file, so if the length is zero, it compared ok.
rem
echo Resulting diff file length should be zero for pass
dir source\pcom.mpp.dif
