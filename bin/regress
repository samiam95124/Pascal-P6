#!/bin/bash

################################################################################
#
# Regression test
#
# Execution:
#
# regress [--full|--short|--pint|--pmach|--cmach]...
#
# Run the compiler through a few typical programs to a "gold" standard file. 
# Each mode is cycled through in sequence.
#
# The flags are one of:
#
# --full    Run full test sequence.
# --short   Run short test sequence.
# --pint    Run only pint mode."
# --pmach   Run only pmach mode."
# --cmach   Run only cmach mode."
# --package Run in package mode."
# --pgen    Run in pgen mode."
#
################################################################################

pint="0"
pmach="0"
cmach="0"
package=0
pgen=0
full="0"
option=""

#
# dotestresult 
#
# Tests the error return and announces error if so. Takes the product files and
# places them in the "test_results" directory in the destination under the
# prefix, like:
#
#  sample_programs/pint/hello.lst
#
# If the .err file is produced, it is copied to the destination as well.
#
# Parameters:
#
# 1: source directory
# 2: Desitination directioy (for test_results dir).
# 3: test file name
#

# dotestresult sdirectory ddirectory testfile
function dotestresult {

    if [ $? -ne 0 ]; then

        echo "*** $1/$3: compile/run fail"
        echo "*** $1/$3: compile/run fail" >> regress_report.txt
        if [ -f $1/$3.err ]; then

            cp $1/$3.err $2/test_results/$prefix

        fi

    else

        mkdir -p $2/test_results/$prefix
        cp $1/$3.lst $2/test_results/$prefix
        cp $1/$3.dif $2/test_results/$prefix
        if [ -f $1/$3.err ]; then

            cp $1/$3.err $2/test_results/$prefix

        fi
        wc -l $1/$3.dif >> regress_report.txt

    fi

}

#
# dotestprog
#
# Runs a test via the testprog script. Includes annoucing the start of test and
# dealing with the test result products.
#
# Parameters:
#
# 1: source directory
# 2: Desitination directioy (for test_results dir).
# 3: test file name
# 4: Any extended options to pass to testprog (quote it for multiples)
#

# dotestprog sdirectory ddirectory testfile extraoptions
function dotestprog {

    #echo "Will run: testprog --noerrmsg $option $3 $1/$2"
    echo "Testing $1/$3..."
    testprog --noerrmsg $option $4 $1/$3
    dotestresult $1 $2 $3

}

#
# Run regression with current options
#
function do_regress {

    dotestprog sample_programs sample_programs hello
    dotestprog sample_programs sample_programs roman
    dotestprog sample_programs sample_programs match
    dotestprog sample_programs sample_programs prime
    dotestprog sample_programs sample_programs qsort
    dotestprog sample_programs sample_programs fbench
    dotestprog sample_programs sample_programs drystone
    dotestprog sample_programs sample_programs startrek
    dotestprog sample_programs sample_programs basics
    dotestprog basic basic basic
    #
    # Now run the ISO7185pat compliance test
    #
    dotestprog standard_tests standard_tests iso7185pat
    #
    # Run previous versions of the system and Pascal-S
    #
    echo "Testing Pascal-s..."
    echo "Pascal-s run" >> regress_report.txt
    testpascals $option
    dotestresult sample_programs sample_programs roman

    echo "Testing Pascal-P2..."
    echo "Pascal-P2 run" >> regress_report.txt
    testp2 $option
    dotestresult p2 p2 roman

    echo "Testing Pascal-P4..."
    echo "Pascal-P4 run" >> regress_report.txt
    testp4 $option
    dotestresult p4 p4 standardp

    echo "Testing PRT..."
    echo "PRT run" >> regress_report.txt
    testprt $option
    dotestresult standard_tests standard_tests iso7185prt

    echo "Testing Pascaline..."
    echo "Pascaline run" >> regress_report.txt
    testpascaline $option
    dotestresult pascaline_tests pascaline_tests pascaline

    #
    # Run debug test
    # 
    # Note debug test only runs in pint mode.
    #
    if [ "$option" = "--pint" ]; then

        echo "Testing debug..."
        echo "Debug test run" >> regress_report.txt
        testdebug
        dotestresult pascaline_tests pascaline_tests debug_test

    fi

    if [ "$full" = "1" ]; then

        echo "Running Pascal-P5"
        echo "Pascal-P5 run" >> regress_report.txt
        testp5 $option
        dotestresult standard_tests p5 iso7185pat

        echo "Running Pascal-P6"
        echo "Pascal-P6 run" >> regress_report.txt
        testp6 $option
        dotestresult standard_tests build iso7185pat

        echo "Running self compile..."
        #
        # Run pcom self compile \(note this runs on P5/P6 only\)
        #
        echo "pcom self compile" >> regress_report.txt
        cpcoms $option
        dotestresult source build pcom.mpp
        
        #
        # Run pint self compile \(note this runs on P5/P6 only\)
        #
        echo "pint self compile" >> regress_report.txt
        cpints $option
        dotestresult source build pcom.mpp
    
	fi

}

for param in "$@" 
do

    if [ "$param" = "--full" ]; then
	
        full=1
        
    elif [ "$param" = "--short" ]; then
    
        full=0
      
    elif [ "$param" = "--pint" ]; then
    
        pint=1

    elif [ "$param" = "--pmach" ]; then
    
        pmach=1

    elif [ "$param" = "--cmach" ]; then
    
        cmach=1

    elif [ "$param" = "--package" ]; then
    
        package=1

    elif [ "$param" = "--pgen" ]; then
    
        pgen=1

    elif [ "$param" = "--help" ]; then

        echo ""
        echo "Regression test"
        echo ""
        echo "Execution:"
        echo ""
        echo "regress [--full|--short|--pint|--pmach|--cmach|--package|--pgen]..."
        echo ""
        echo "Run the compiler through a few typical programs"
        echo "to a "gold" standard file. Each mode is cycled through in sequence."
        echo ""
        echo "The flags are one of:"
        echo ""
        echo "--full    Run full test sequence."
        echo "--short   Run short test sequence."
        echo "--pint    Run only pint mode."
        echo "--pmach   Run only pmach mode."
        echo "--cmach   Run only cmach mode."
        echo "--package Run in package mode."
        echo "--pgen    Run in pgen mode."
        echo ""
		exit 0
		
    elif [ ! -z "$param" ]; then
    
    	echo ""
    	echo "*** Option not recognized"
    	echo ""
		echo "Execution:"
		echo ""
		echo "regress [--full|--short]..."
		echo ""
		exit 1
		
    fi
    
done

echo "************ Regression Summary *************" > regress_report.txt
date >> regress_report.txt
echo Line counts should be 0 for pass >> regress_report.txt
if [ "$pint" = "1" ]; then

    option="--pint"
    echo "pint run ***************************************" >> regress_report.txt
    do_regress

elif [ "$pmach" = "1" ]; then

    option="--pmach"
    echo "pmach run ***************************************" >> regress_report.txt
    do_regress

elif [ "$cmach" = "1" ]; then

    option="--cmach"
    echo "cmach run ***************************************" >> regress_report.txt
    do_regress

elif [ "$package" = "1" ]; then

    option="--package"
    echo "package run ***************************************" >> regress_report.txt
    do_regress

elif [ "$pgen" = "1" ]; then

    option="--pgen"
    echo "pgen run ***************************************" >> regress_report.txt
    do_regress

else

    # run all modes
    option="--pint"
    prefix="pint"
    echo "pint run ***************************************" >> regress_report.txt
    do_regress
    option="--pmach"
    prefix="pmach"
    echo "pmach run ***************************************" >> regress_report.txt
    do_regress
    option="--cmach"
    prefix="cmach"
    echo "cmach run ***************************************" >> regress_report.txt
    do_regress
    option="--package"
    prefix="package"
    echo "package run ***************************************" >> regress_report.txt
    do_regress
    option="--pgen"
    prefix="pgen"
    echo "pgen run ***************************************" >> regress_report.txt
    do_regress

fi

#
# Print collected status
#
echo ""
date >> regress_report.txt
echo "Files sha256sum ***************************************" >> regress_report.txt
chkfiles >> regress_report.txt
cat regress_report.txt
echo ""
