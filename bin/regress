#!/bin/bash
#
# Regression test
#
# Execution:
#
# regress [--full|--short|--pint|--pmach|--cmach]...
#
# Run the compiler through a few typical programs
# to a "gold" standard file. Each mode is cycled through in sequence.
#
# The flags are one of:
#
# --full  Run full test sequence.
# --short Run short test sequence.
#

pint="0"
pmach="0"
cmach="0"
package=0
pgen=0
full="0"
option=""

#
# Run regression with current options
#
function do_regress {

    testprog --noerrmsg $option sample_programs/hello
    wc -l sample_programs/hello.dif >> regress_report.txt
    testprog --noerrmsg $option sample_programs/roman
    wc -l sample_programs/roman.dif >> regress_report.txt
    testprog --noerrmsg $option sample_programs/match
    wc -l sample_programs/match.dif >> regress_report.txt
    testprog --noerrmsg $option sample_programs/prime
    wc -l sample_programs/prime.dif >> regress_report.txt
    testprog --noerrmsg $option sample_programs/qsort
    wc -l sample_programs/qsort.dif >> regress_report.txt
    testprog --noerrmsg $option sample_programs/fbench
    wc -l sample_programs/fbench.dif >> regress_report.txt
    testprog --noerrmsg $option sample_programs/drystone
    wc -l sample_programs/drystone.dif >> regress_report.txt
    testprog --noerrmsg $option sample_programs/startrek
    wc -l sample_programs/startrek.dif >> regress_report.txt
    testprog --noerrmsg $option sample_programs/basics
    wc -l sample_programs/basics.dif >> regress_report.txt
    testprog --noerrmsg $option basic/basic
    wc -l basic/basic.dif >> regress_report.txt
    #
    # Now run the ISO7185pat compliance test
    #
    if [ "$option" = "--cmach" ] || [ "$option" = "--package" ] || [ "$option" = "--pgen" ]; then
    
        echo "Executing: testprog --noerrmsg $option --cmpfile standard_tests/iso7185patc standard_tests/iso7185pat"
    	testprog --noerrmsg $option --cmpfile standard_tests/iso7185patc standard_tests/iso7185pat
    	
    else
    
		testprog --noerrmsg $option standard_tests/iso7185pat
    	
    fi
    wc -l standard_tests/iso7185pat.dif >> regress_report.txt
    #
    # Run previous versions of the system and Pascal-S
    #
    testprog --noerrmsg $option sample_programs/pascals
    wc -l sample_programs/pascals.dif >> regress_report.txt

    echo "Running Pascal-P2"
    echo "Pascal-P2 run" >> regress_report.txt
    testp2 $option
    wc -l p2/roman.dif >> regress_report.txt

    echo "Running Pascal-P4"
    echo "Pascal-P4 run" >> regress_report.txt
    testp4 $option
    wc -l p4/standardp.dif >> regress_report.txt

    echo "Running PRT..."
    echo "PRT run" >> regress_report.txt
    #
    # Run rejection test
    #
    runprt $option
    strip standard_tests/iso7185prt.lst tmp1
    strip standard_tests/iso7185prt.cmp tmp2
    diff -B tmp1 tmp2 > standard_tests/iso7185prt.dif
    rm -f tmp1 tmp2
    #diffnole standard_tests/iso7185prt.lst standard_tests/iso7185prt.cmp > \
    #    standard_tests/iso7185prt.dif
    wc -l standard_tests/iso7185prt.dif >> regress_report.txt

    #
    # Run Pascaline test
    #
    echo "Running Pascaline test"
    echo "Pascaline run" >> regress_report.txt
    testpascaline $option
    if [ "$option" = "--pmach" ]; then

        wc -l pascaline_tests/pascaline_pmach.dif >> regress_report.txt

    elif [ "$option" = "--cmach" ]; then

        wc -l pascaline_tests/pascaline_cmach.dif >> regress_report.txt

    else

        wc -l pascaline_tests/pascaline.dif >> regress_report.txt

    fi

    #
    # Run debug test
    # 
    # Note debug test only runs in pint mode.
    #
    if [ "$option" = "" ]; then

        echo "Running debug test"
        echo "Debug test run" >> regress_report.txt
        testdebug
        wc -l pascaline_tests/debug_test.dif >> regress_report.txt

    fi

    if [ "$full" = "1" ]; then

        echo "Running Pascal-P5"
        echo "Pascal-P5 run" >> regress_report.txt
        testp5 $option
        wc -l standard_tests/iso7185pat.dif >> regress_report.txt

        echo "Running Pascal-P6"
        echo "Pascal-P6 run" >> regress_report.txt
        testp6 $option
        wc -l standard_tests/iso7185pat.dif >> regress_report.txt

        echo "Running self compile..."
        #
        # Run pcom self compile \(note this runs on P5/P6 only\)
        #
        echo "pcom self compile" >> regress_report.txt
        cpcoms $option
        wc -l source/pcom.mpp.dif >> regress_report.txt
        
        #
        # Run pint self compile \(note this runs on P5/P6 only\)
        #
        echo "pint self compile" >> regress_report.txt
        cpints $option
        wc -l standard_tests/iso7185pats.dif >> regress_report.txt
    
	fi

}

for param in "$@" 
do

    if [ "$param" = "--full" ]; then
	
        full=1
        
    elif [ "$param" = "--short" ]; then
    
        full=0
      
    elif [ "$param" = "--pint" ]; then
    
        pint=1

    elif [ "$param" = "--pmach" ]; then
    
        pmach=1

    elif [ "$param" = "--cmach" ]; then
    
        cmach=1

    elif [ "$param" = "--package" ]; then
    
        package=1

    elif [ "$param" = "--pgen" ]; then
    
        pgen=1

    elif [ "$param" = "--help" ]; then

        echo ""
        echo "Regression test"
        echo ""
        echo "Execution:"
        echo ""
        echo "regress [--full|--short|--pint|--pmach|--cmach|--package|--pgen]..."
        echo ""
        echo "Run the compiler through a few typical programs"
        echo "to a "gold" standard file. Each mode is cycled through in sequence."
        echo ""
        echo "The flags are one of:"
        echo ""
        echo "--full    Run full test sequence."
        echo "--short   Run short test sequence."
        echo "--pint    Run only pint mode."
        echo "--pmach   Run only pmach mode."
        echo "--cmach   Run only cmach mode."
        echo "--package Run in package mode."
        echo "--pgen    Run in pgen mode."
        echo ""
		exit 0
		
    elif [ ! -z "$param" ]; then
    
    	echo ""
    	echo "*** Option not recognized"
    	echo ""
		echo "Execution:"
		echo ""
		echo "regress [--full|--short]..."
		echo ""
		exit 1
		
    fi
    
done

echo "************ Regression Summary *************" > regress_report.txt
date >> regress_report.txt
echo Line counts should be 0 for pass >> regress_report.txt
if [ "$pint" = "1" ]; then

    option=""
    echo "pint run ***************************************" >> regress_report.txt
    do_regress

elif [ "$pmach" = "1" ]; then

    option="--pmach"
    echo "pmach run ***************************************" >> regress_report.txt
    do_regress

elif [ "$cmach" = "1" ]; then

    option="--cmach"
    echo "cmach run ***************************************" >> regress_report.txt
    do_regress

elif [ "$package" = "1" ]; then

    option="--package"
    echo "package run ***************************************" >> regress_report.txt
    do_regress

elif [ "$pgen" = "1" ]; then

    option="--pgen"
    echo "pgen run ***************************************" >> regress_report.txt
    do_regress

else

    # run all modes
    option=""
    echo "pint run ***************************************" >> regress_report.txt
    do_regress
    option="--pmach"
    echo "pmach run ***************************************" >> regress_report.txt
    do_regress
    option="--cmach"
    echo "cmach run ***************************************" >> regress_report.txt
    do_regress
    option="--package"
    echo "package run ***************************************" >> regress_report.txt
    do_regress

fi

#
# Print collected status
#
echo ""
date >> regress_report.txt
echo "Files md5sum ***************************************" >> regress_report.txt
chkfiles >> regress_report.txt
cat regress_report.txt
echo ""
